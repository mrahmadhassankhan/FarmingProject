{"ast":null,"code":"var _jsxFileName = \"/Users/abubakarsiddique/Desktop/MERN Projects/FarmingProject/admin/src/pages/Category/AddCategory.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CSS from './AddCategory.module.css';\nimport GridLayout from '../../components/GridLayout';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddCategory = () => {\n  _s();\n  const [categoryName, setCategoryName] = useState('');\n  // const [categoryImage, setCategoryImage] = useState(null);\n  const [categoryImage, setCategoryImage] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Use FileReader to read the selected image\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // Set the categoryImage state with the data URL of the selected image\n        setCategoryImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleAddCategory = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('categoryName', categoryName);\n    formData.append('categoryImage', categoryImage);\n    try {\n      const res = await axios.post(\"http://localhost:1783/api/postcategory\", formData);\n      console.log(res.data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GridLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: CSS['addcategory-title'],\n      children: \"Add your Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddCategory,\n      className: CSS['from-container'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: CSS['category-name-div'],\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category-name\",\n            children: \"Category Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            type: \"text\",\n            placeholder: \"Category Name\",\n            id: \"category-name\",\n            value: categoryName,\n            onChange: e => setCategoryName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: CSS['category-selectimg-div'],\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"category-img\",\n            children: \"Select Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            required: true,\n            className: \"\",\n            accept: \".jpg, .jpeg, .png\",\n            type: \"file\",\n            id: \"category-img\",\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: CSS['category-button'],\n          children: \"Add Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: CSS['category-img-div'],\n        children: categoryImage && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: CSS['category-img'],\n          src: categoryImage,\n          alt: \"Selected Category\",\n          width: '300px',\n          height: '300px'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCategory, \"CZYO1gc430Gu8+z9BVQWB3fCKyU=\");\n_c = AddCategory;\nexport default AddCategory;\nvar _c;\n$RefreshReg$(_c, \"AddCategory\");","map":{"version":3,"names":["React","useState","CSS","GridLayout","axios","jsxDEV","_jsxDEV","AddCategory","_s","categoryName","setCategoryName","categoryImage","setCategoryImage","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleAddCategory","preventDefault","formData","FormData","append","res","post","console","log","data","err","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","required","type","placeholder","id","value","onChange","accept","src","alt","width","height","_c","$RefreshReg$"],"sources":["/Users/abubakarsiddique/Desktop/MERN Projects/FarmingProject/admin/src/pages/Category/AddCategory.js"],"sourcesContent":["import React, { useState } from 'react'\nimport CSS from './AddCategory.module.css'\nimport GridLayout from '../../components/GridLayout'\nimport axios from \"axios\";\n\nconst AddCategory = () => {\n  const [categoryName, setCategoryName] = useState('');\n  // const [categoryImage, setCategoryImage] = useState(null);\n  const [categoryImage, setCategoryImage] = useState(null);\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n\n    if (file) {\n      // Use FileReader to read the selected image\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        // Set the categoryImage state with the data URL of the selected image\n        setCategoryImage(reader.result);\n      };\n\n      reader.readAsDataURL(file);\n    }\n  };\n\nconst handleAddCategory = async (e) => {\n  e.preventDefault();\n\n  const formData = new FormData();\n  formData.append('categoryName', categoryName);\n  formData.append('categoryImage', categoryImage);\n\n  try {\n    const res = await axios.post(\"http://localhost:1783/api/postcategory\", formData);\n    console.log(res.data);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n  \n  return (\n    <GridLayout>\n      <h1 className={CSS['addcategory-title']}>Add your Category</h1>\n      <form onSubmit={handleAddCategory} className={CSS['from-container']}>\n        <div>\n          <div className={CSS['category-name-div']}>\n            <label htmlFor='category-name'>Category Name</label>\n            <input required type='text' placeholder='Category Name' id='category-name' value={categoryName} onChange={(e) => setCategoryName(e.target.value)} />\n          </div>\n          <div className={CSS['category-selectimg-div']}>\n            <label htmlFor='category-img'>Select Image</label>\n            <input required className='' accept='.jpg, .jpeg, .png' type='file' id='category-img' onChange={handleImageChange} />\n          </div>\n            <button type='submit' className={CSS['category-button']}>Add Category</button>\n        </div>\n        <div className={CSS['category-img-div']}>\n          {categoryImage && (\n            <img className={CSS['category-img']} src={categoryImage} alt='Selected Category' width={'300px'} height={'300px'} />\n          )}\n        </div>\n      </form>\n    </GridLayout>\n  )\n}\n\nexport default AddCategory"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}